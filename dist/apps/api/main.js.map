{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./apps/api/src/app/ReviewReception.ts","webpack:///./apps/api/src/main.ts","webpack:///./libs/data/src/index.ts","webpack:///./libs/data/src/lib/Frame.ts","webpack:///./libs/data/src/lib/Frame/BleededRectangleFrame.ts","webpack:///./libs/data/src/lib/Frame/BookCoverFrame.ts","webpack:///./libs/data/src/lib/Frame/Frame.ts","webpack:///./libs/data/src/lib/Frame/Line.ts","webpack:///./libs/data/src/lib/Frame/PerfectBoundBookSoftCoverFrame.ts","webpack:///./libs/data/src/lib/Frame/PerfectBoundHardCoverFrame.ts","webpack:///./libs/data/src/lib/Frame/RectangleFrame.ts","webpack:///./libs/data/src/lib/Frame/SaddleStitchedBookCoverFrame.ts","webpack:///./libs/data/src/lib/FrameDictionary/BookFrameDictionary.ts","webpack:///./libs/data/src/lib/FrameDictionary/FrameDictionary.ts","webpack:///./libs/data/src/lib/FrameDictionary/PerfectBoundBookFrameDictionary.ts","webpack:///./libs/data/src/lib/FrameDictionary/SaddleStitchedBookFrameDictionary.ts","webpack:///./libs/data/src/lib/FrameDictionary/SingleSheetFrameDictionary.ts","webpack:///./libs/data/src/lib/Material.ts","webpack:///./libs/data/src/lib/Material/Coat.ts","webpack:///./libs/data/src/lib/Material/Paper.ts","webpack:///./libs/data/src/lib/Material/PaperMaterial.ts","webpack:///./libs/data/src/lib/Product.ts","webpack:///./libs/data/src/lib/Product/Book.ts","webpack:///./libs/data/src/lib/Product/PerfectBoundBook.ts","webpack:///./libs/data/src/lib/Product/Product.ts","webpack:///./libs/data/src/lib/Product/SaddleStichedBook.ts","webpack:///./libs/data/src/lib/Product/SingleSheet.ts","webpack:///./libs/data/src/lib/Review.ts","webpack:///./libs/data/src/lib/Review/FramedPage.ts","webpack:///./libs/data/src/lib/Review/ReviewItem.ts","webpack:///./libs/data/src/lib/Review/ReviewModel.ts","webpack:///./libs/data/src/lib/Review/ReviewRegistrationInfo.ts","webpack:///./libs/data/src/lib/Review/ReviewStatus.ts","webpack:///./libs/data/src/lib/Review/UploadFilePageInfo.ts","webpack:///./libs/data/src/lib/Review/UploadFileStatus.ts","webpack:///./libs/interfaces/src/index.ts","webpack:///./libs/interfaces/src/lib/printer.ts","webpack:///./libs/interfaces/src/lib/product.ts","webpack:///./libs/interfaces/src/lib/review.ts","webpack:///./libs/interfaces/src/lib/transaction.ts","webpack:///external \"axios\"","webpack:///external \"class-transformer\"","webpack:///external \"express\"","webpack:///external \"reflect-metadata\"","webpack:///external \"tslib\"","webpack:///external \"typeorm\""],"names":[],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import { ReviewItem, ReviewReception as ReviewReceptionInterface, ReviewRegistrationInfo, ReviewStatus, UploadFileStatus } from '@gainhow-review/data'\nimport axios from 'axios';\nimport { createConnection, ConnectionOptions, Connection, Repository } from 'typeorm';\n\nexport class ReviewReception implements ReviewReceptionInterface {\n    constructor(\n        public connection: Connection\n    ) {}\n\n    // TODO: move to libs/utils\n    private getRandomString(length: number): string {\n\n    }\n\n    /**\n     *  根據反序列化後的reviewRegistrationInfo，初始化新的reviewItem\n     *  ⇒ 把reviewItem序列化之後，用一個新的reviewId存入自己的database\n     *  ⇒ 把reviewItem裡的reviewStatus序列化後回傳\n     */\n    async register(reviewRegistrationInfo: ReviewRegistrationInfo): Promise<string> {\n        let newStatus = new ReviewStatus(reviewRegistrationInfo.numberOfModels);\n        const reviewIdLength: number = 36;\n        let reviewId: string = this.getRandomString(reviewIdLength);\n        let repo: Repository<ReviewItem> = this.connection.getRepository(ReviewItem);\n        while (await repo.findOne(reviewId)) {\n            reviewId = this.getRandomString(reviewIdLength);\n        }\n        let newReviewItem = new ReviewItem(\n            reviewId,\n            newStatus,\n            reviewRegistrationInfo.product\n        );\n        await repo.save(newReviewItem);\n        return newReviewItem.reviewId;\n    }\n    // TODO: 確認一下是不是要直接刪掉，還是加一個標記（e.g. item.progress = \"DEREGISTERED\"; ）\n    async deregister(reviewId: string): Promise<void> {\n        let repo: Repository<ReviewItem> = this.connection.getRepository(ReviewItem);\n        const itemToRemove: ReviewItem = await repo.findOne(reviewId);\n        await repo.remove(itemToRemove);\n    }\n    async uploadFiles(reviewId: string, files: File[]): Promise<ReviewStatus> {\n        throw new Error('Method not implemented.');\n        let reviewItemRepo: Repository<ReviewItem> = this.connection.getRepository(ReviewItem);\n        let uploadFileStatusRepo: Repository<UploadFileStatus> = this.connection.getRepository(UploadFileStatus);\n        let reviewItem: ReviewItem = await reviewItemRepo.findOne(reviewId, { relations: [\"status\"] });\n        let promises: Promise<void>[] = files.map(async (file: File): Promise<void> => {\n            let fileStatus = new UploadFileStatus(\n                reviewItem.status,\n                file.name\n            );\n            await uploadFileStatusRepo.save(fileStatus);\n            try {\n                let uploadToken: string = await axios.post();\n                fileStatus.uploadToken = uploadToken;\n                fileStatus.currentStage = \"GENERATING_PRINTABLE_PAGES\";\n                await uploadFileStatusRepo.save(fileStatus);\n            } catch {\n                fileStatus.errorStage = \"UPLOADING\";\n                await uploadFileStatusRepo.save(fileStatus);\n            }\n        });\n        await Promise.all(promises);\n        let updatedReviewItem: ReviewItem\n            = await reviewItemRepo.findOne(\n                reviewId,\n                {\n                    relations: [\n                        \"status\",\n                        \"status.uploadFileStatuses\",\n                        \"status.uploadFileStatuses.pageInfos\"\n                    ]\n                }\n            );\n        return updatedReviewItem.status;\n    }\n    deleteFile(reviewId: string, fileId: string): Promise<ReviewStatus> {\n        throw new Error('Method not implemented.');\n    }\n    loadReviewStatus(reviewId: string): Promise<ReviewStatus> {\n        throw new Error('Method not implemented.');\n    }\n    loadReviewItem(reviewId: string): Promise<ReviewItem> {\n        throw new Error('Method not implemented.');\n    }\n    saveReviewItem(reviewItem: ReviewItem): Promise<ReviewItem> {\n        throw new Error('Method not implemented.');\n    }\n    generateFinalResults(reviewItem: ReviewItem): Promise<void> {\n        throw new Error('Method not implemented.');\n    }\n}","import \"reflect-metadata\";\nimport { ReviewRegistrationInfo } from '@gainhow-review/data';\nimport { RegisterResponseBody } from '@gainhow-review/interfaces';\nimport { deserialize } from 'class-transformer';\nimport * as express from 'express';\nimport { Connection, createConnection } from 'typeorm';\nimport { ReviewReception } from './app/ReviewReception';\n\nconst app = express();\n\napp.use(express.json());\n\nconst connectionPromise: Promise<Connection> = createConnection({\n  \"type\": \"mysql\",\n  \"host\": \"192.168.3.180\",\n  \"port\": 3306,\n  \"username\": \"gainhow\",\n  \"password\": \"gding1234\",\n  \"database\": \"gainghow-test\",\n  \"synchronize\": true,\n  \"logging\": false,\n  \"entities\": [\n     \"../../../libs/data/src/lib/Review/*.ts\"\n  ],\n  \"migrations\": [\n     \"apps/api/src/migration/**/*.ts\"\n  ],\n  \"subscribers\": [\n     \"apps/api/src/subscriber/**/*.ts\"\n  ],\n  \"cli\": {\n     \"entitiesDir\": \"libs/data/src/lib/Review\",\n     \"migrationsDir\": \"apps/api/src/migration\",\n     \"subscribersDir\": \"apps/api/src/subscriber\"\n  }\n});\n\napp.post('/api/register', async (req, res) => {\n  try {\n    let connection: Connection = await connectionPromise;\n  } catch (error) {\n    res.send({\n      isSuccess: false,\n      error\n    })\n  }\n  let reviewRegistrationInfo: ReviewRegistrationInfo\n    = deserialize(ReviewRegistrationInfo, req.body.reviewRegistrationInfoJson);\n  let responseBody: RegisterResponseBody;\n  try {\n    let reviewId: string = await new ReviewReception(connection).register(reviewRegistrationInfo);\n    responseBody = {\n      isSuccess: true,\n      reviewId\n    };\n  } catch (error) {\n    responseBody = {\n      isSuccess: false,\n      error\n    };\n  }\n  res.send(responseBody);\n})\n\nconst port = process.env.port || 3333;\nconst server = app.listen(port, () => {\n  console.log('Listening at http://localhost:' + port + '/api');\n});\nserver.on('error', console.error);\n\n","export * from './lib/Review';\nexport * from './lib/Product';\nexport * from './lib/Material';\nexport * from './lib/Frame';\n","import Frame from \"./Frame/Frame\";\nimport Line from \"./Frame/Line\";\n\nexport {\n    Frame,\n    Line\n};","import { markTimeline } from \"console\";\nimport { CSSProperties } from \"react\";\nimport { Mark } from \"./Frame\";\nimport Line from \"./Line\";\nimport RectangleFrame from \"./RectangleFrame\";\n\nexport default class BleededRectangleFrame extends RectangleFrame {\n    public bleedingArea: string;\n    public shape: string;\n    public cutOutAreas: string[] = [];\n    public marks: Array<Mark>;\n\n    constructor(\n        public readonly widthWithoutBleeding: number,   // 裁切後的寬（mm）\n        public readonly heightWithoutBleeding: number,  // 裁切後的高（mm）\n        public readonly cutError: number,               // 裁切誤差／出血範圍（mm）\n    ) {\n        super(\n            widthWithoutBleeding + (2 * cutError),\n            heightWithoutBleeding + (2 * cutError)\n        );\n        this.marks = this.createMarks();\n        this.shape = this.createShape();\n        this.bleedingArea = this.createBleedingArea();\n    }\n\n    protected createMarks(): Array<Mark> {\n        let marks: Array<Mark> = [];\n        let safeArea: Mark;\n        let cutMark: Mark;\n        \n        let cutErrorPercentageInMaxWidth: number\n            = this.cutError / this.maxWidth * 100;\n        let cutErrorPercentageInMaxHeight: number\n            = this.cutError / this.maxHeight * 100;\n        let safeAreaX: number = cutErrorPercentageInMaxWidth * 2;\n        let safeAreaY: number = cutErrorPercentageInMaxHeight * 2;\n\n        let safeAreaWidth: number = 100 - cutErrorPercentageInMaxWidth * 4;\n        let safeAreaHeight: number = 100 - cutErrorPercentageInMaxHeight * 4;\n        \n        const saveAreaSVGStyle: string = `\n            width:100%; height:100%;\n        `;\n        const saveAreaRectStyle: string = `\n            fill:none;\n            stroke-width:2;\n            stroke:rgb(102 102 102) ;\n            stroke-dasharray:10,10;\n        `;\n        safeArea = {\n            positionX: 0,\n            positionY: 0,\n            svgString: `\n            <svg style='${saveAreaSVGStyle}' xmlns='http://www.w3.org/2000/svg' >\n                <rect \n                    style='${saveAreaRectStyle}'\n                    x='${safeAreaX}%'\n                    y='${safeAreaY}%'\n                    width='${safeAreaWidth}%'\n                    height='${safeAreaHeight}%' \n                />\n            </svg>\n        `\n        }\n        const cutMarkLineLength: number = 5;\n        const cutMarkLineMargin: number = 3;\n        const cutMarkWidthScale:number = (this.maxHeight/this.maxWidth);\n        const cutMarkHeightScale: number = 1;\n        const cutMarkOffsetX: number = (cutMarkLineLength + cutMarkLineMargin) * cutMarkWidthScale;\n        const cutMarkOffsetY: number = (cutMarkLineLength + cutMarkLineMargin) * cutMarkHeightScale;\n\n        const cutMarkStyle: string = `\n            width:calc(100% ); height:calc(100% );\n        `\n        const cutMarkLineStyle: string =`\n            fill:none;\n            stroke-width:1;\n            stroke:rgb(51 51 51) ; \n        `\n        const cutErrorPercentageIncutMarkWidth = this.cutError / (this.maxWidth * (1 + cutMarkOffsetX*2/100)) * 100;\n        const cutErrorPercentageIncutMarkHeight = this.cutError / (this.maxHeight * (1 + cutMarkOffsetY*2/100)) * 100;\n\n\n        const cutMarkLineX: string = `calc(${cutErrorPercentageIncutMarkWidth}% + ${cutMarkOffsetX/(1 + cutMarkOffsetX*2/100)}% )`;\n        const cutMarkLineY: string = `calc(${cutErrorPercentageIncutMarkHeight}% + ${cutMarkOffsetY/(1 + cutMarkOffsetY*2/100)}% )`;\n        cutMark = {\n            positionX: cutMarkOffsetX,\n            positionY: cutMarkOffsetY,\n            svgString: `\n                <svg style='${cutMarkStyle}' xmlns='http://www.w3.org/2000/svg' >\n                    <line style='${cutMarkLineStyle}'\n                        x1='${cutMarkLineX}'\n                        y1='0%'\n                        x2='${cutMarkLineX}'\n                        y2='${cutMarkLineLength*cutMarkHeightScale}%'\n                    />\n\n                    <line style='${cutMarkLineStyle}'\n                        x1='calc(100% - ${cutMarkLineX})'\n                        y1='0%'\n                        x2='calc(100% - ${cutMarkLineX})'\n                        y2='${cutMarkLineLength*cutMarkHeightScale}%'\n                    />\n\n                    <line style='${cutMarkLineStyle}'\n                        x1='calc(100% - ${cutMarkLineX})'\n                        y1='100%'\n                        x2='calc(100% - ${cutMarkLineX})'\n                        y2='calc(100% - ${cutMarkLineLength*cutMarkHeightScale}%)'\n                    />\n\n                    <line style='${cutMarkLineStyle}'\n                        x1='calc(${cutMarkLineX})'\n                        y1='100%'\n                        x2='calc(${cutMarkLineX})'\n                        y2='calc(100% - ${cutMarkLineLength*cutMarkHeightScale}%)'\n                    />\n\n                    <line style='${cutMarkLineStyle}'\n                        x1='0%'\n                        y1='${cutMarkLineY}'\n                        x2='${cutMarkLineLength*cutMarkWidthScale}%'\n                        y2='${cutMarkLineY}'\n                    />\n                    <line style='${cutMarkLineStyle}'\n                        x1='100%'\n                        y1='${cutMarkLineY}'\n                        x2='calc(100% - ${cutMarkLineLength*cutMarkWidthScale}%)'\n                        y2='${cutMarkLineY}'\n                    />\n                    <line style='${cutMarkLineStyle}'\n                        x1='100%'\n                        y1='calc(100% - ${cutMarkLineY})'\n                        x2='calc(100% - ${cutMarkLineLength*cutMarkWidthScale}%)'\n                        y2='calc(100% - ${cutMarkLineY})'\n                    />\n                    <line style='${cutMarkLineStyle}'\n                        x1='0%'\n                        y1='calc(100% - ${cutMarkLineY})'\n                        x2='calc(${cutMarkLineLength*cutMarkWidthScale}%)'\n                        y2='calc(100% - ${cutMarkLineY})'\n                    />\n                    \n                </svg>\n            \n            `\n        }\n        marks.push(safeArea);\n        marks.push(cutMark);\n        return marks;\n\n      //  return `polygon(${safeAreaX}% ${safeAreaY}%, ${safeAreaRight}% ${safeAreaY}%, ${safeAreaRight}% ${safeAreaBottom}%, ${safeAreaX}% ${safeAreaBottom}%)`;\n    }\n    protected createShape(): string {\n        let cutErrorPercentageInMaxWidth: number\n            = this.cutError / this.maxWidth * 100;\n        let cutErrorPercentageInMaxHeight: number\n            = this.cutError / this.maxHeight * 100;\n        let left: number = cutErrorPercentageInMaxWidth;\n        let right: number = 100 - cutErrorPercentageInMaxWidth;\n        let top: number = cutErrorPercentageInMaxHeight;\n        let bottom: number = 100 - cutErrorPercentageInMaxHeight;\n        \n        return `polygon(${left}% ${top}%, ${right}% ${top}%, ${right}% ${bottom}%, ${left}% ${bottom}%)`;\n    }\n    protected createBleedingArea(): string {\n        return `polygon(0% 0%, 0% 100%, 100% 100%, 100% 0%)`;\n    }\n}","import BleededRectangleFrame from \"./BleededRectangleFrame\";\nimport Line from \"./Line\";\n\nexport default abstract class BookCoverFrame extends BleededRectangleFrame {\n    public abstract foldLines: Array<Line>;\n}","import Line from \"./Line\";\n\nexport type Mark = {\n    positionX: number;\n    positionY: number;\n    svgString: string;\n};\ntype CSSClipPath = string;\n\nexport default abstract class Frame {\n    public abstract readonly bleedingArea: CSSClipPath;          // 出血範圍的css clip-path (單位：%)\n    public abstract readonly shape: CSSClipPath;                 // 成品範圍的css clip-path (單位：%)\n    public abstract readonly cutOutAreas: Array<CSSClipPath>;    // 鏤空範圍的css clip-paths (單位：%)\n    public abstract readonly marks: Array<Mark>;       // 其它記號的SVG strings\n\n    constructor(\n        readonly maxWidth: number,  // 最大寬度（mm）\n        readonly maxHeight: number  // 最大高度（mm）\n    ) {\n    }\n}","export default class Line {\n    constructor(\n        readonly startX: number,\n        readonly startY: number,\n        readonly endX: number,\n        readonly endY: number,\n    ) {}\n}","import BookCoverFrame from \"./BookCoverFrame\";\nimport Line from \"./Line\";\n\nexport default class PerfectBoundBookSoftCoverFrame extends BookCoverFrame {\n    public foldLines: Line[];\n    constructor(\n        readonly bookWidth: number,\n        readonly bookHeight: number,\n        readonly bookSpineWidth: number,\n        readonly cutError: number\n    ) {\n        super(\n            bookWidth * 2 + bookSpineWidth,\n            bookHeight,\n            cutError\n        );\n        this.foldLines = this.createFoldLines();\n    }\n    protected createFoldLines(): Line[] {\n        \n\n        let leftFoldLine: Line = new Line(\n            (this.cutError + this.bookWidth) / this.maxWidth * 100, 0,\n            (this.cutError + this.bookWidth) / this.maxWidth * 100, (this.height) / this.maxHeight * 100\n        );\n        let rightFoldLine: Line = new Line(\n            (this.width - this.cutError - this.bookWidth) / this.maxWidth * 100, 0,\n            (this.width - this.cutError - this.bookWidth) / this.maxWidth * 100, (this.height) / this.maxHeight * 100\n        );\n        return [\n            leftFoldLine,\n            rightFoldLine\n        ];\n    }\n}","\nimport BookCoverFrame from \"./BookCoverFrame\";\nimport Line from \"./Line\";\n\nexport default class PerfectBoundBookHardCoverFrame extends BookCoverFrame {\n    public foldLines: Line[];\n    constructor(\n        readonly bookWidth: number,         // 書的寬度（mm）\n        readonly bookHeight: number,        // 書的高度（mm）\n        readonly bookSpineWidth: number,    // 書背寬度（mm）\n        readonly outerHingeWidth: number,   // 書溝寬度（mm）\n        readonly cutError: number           // 出血範圍（mm）\n    ) {\n        super(\n            (bookWidth + outerHingeWidth) * 2 + bookSpineWidth,\n            bookHeight,\n            cutError\n        );\n        this.foldLines = this.createFoldLines();\n    }\n    protected createFoldLines(): Line[] {\n        let leftHingeLeftFoldLine: Line = new Line(\n            (this.cutError + this.bookWidth) / this.maxWidth * 100, 0,\n            (this.cutError + this.bookWidth) / this.maxWidth * 100, this.bookHeight / this.maxHeight * 100\n        );\n        let leftHingeRightFoldLine: Line = new Line(\n            (this.cutError + this.bookWidth + this.outerHingeWidth) / this.maxWidth * 100, 0,\n            (this.cutError + this.bookWidth + this.outerHingeWidth) / this.maxWidth * 100, this.bookHeight / this.maxHeight * 100\n        );\n        let rightHingeLeftFoldLine: Line = new Line(\n            (this.width - this.cutError - this.bookWidth - this.outerHingeWidth) / this.maxWidth * 100, 0,\n            (this.width - this.cutError - this.bookWidth - this.outerHingeWidth) / this.maxWidth * 100, this.bookHeight / this.maxHeight * 100\n        );\n        let rightHingeRightFoldLine: Line = new Line(\n            (this.width - this.cutError - this.bookWidth) / this.maxWidth * 100, 0,\n            (this.width - this.cutError - this.bookWidth) / this.maxWidth * 100, this.bookHeight / this.maxHeight * 100\n        );\n        return [\n            leftHingeLeftFoldLine,\n            leftHingeRightFoldLine,\n            rightHingeLeftFoldLine,\n            rightHingeRightFoldLine\n        ];\n    }\n}","import Frame from \"./Frame\";\n\nexport default abstract class RectangleFrame extends Frame {\n    constructor(\n        protected width: number,\n        protected height: number\n    ) {\n        super(width, height);\n    }\n}","import BookCoverFrame from \"./BookCoverFrame\";\nimport Line from \"./Line\";\n\nexport default class SaddleStitchedBookCoverFrame extends BookCoverFrame {\n    public foldLines: Line[];\n\n    constructor(\n        bookWidth: number,\n        bookHeight: number,\n        cutError: number,\n    ) {\n        super(\n            bookWidth * 2,\n            bookHeight,\n            cutError\n        );\n        this.foldLines = this.createFoldLines();\n    }\n    protected createFoldLines(): Line[] {\n        let middle: number = this.maxWidth / 2;\n        let middleLine: Line = new Line(\n            middle / this.maxWidth * 100, 0,\n            middle / this.maxWidth * 100, 100\n        )\n        return [middleLine];\n    }\n}","import Book from \"../Product/Book\";\nimport BleededRectangleFrame from \"../Frame/BleededRectangleFrame\";\nimport BookCoverFrame from \"../Frame/BookCoverFrame\";\nimport FrameDictionary from \"./FrameDictionary\";\nimport RectangleFrame from \"../Frame/RectangleFrame\";\n\nexport default abstract class BookFrameDictionary extends FrameDictionary {\n    protected coverFrame: BookCoverFrame;\n    protected innerPageFrames: Map<string, BleededRectangleFrame>;\n    \n    constructor(product: Book)   {\n        super(product);\n        this.coverFrame = this.createBookCoverFrame();\n        this.innerPageFrames = this.createInnerPageFrames();\n    }\n    protected createFrames(): Map<string, RectangleFrame> {\n        let frames = new Map<string, RectangleFrame>();\n        frames.set('cover', this.coverFrame);\n        frames = Object.assign(frames, this.innerPageFrames);\n        return frames;\n    }\n    protected abstract createInnerPageFrames(): Map<string, BleededRectangleFrame>;\n    protected abstract createBookCoverFrame(): BookCoverFrame;\n}\n","import Product from \"../Product/Product\";\nimport Frame from \"../Frame/Frame\";\n\nexport default abstract class FrameDictionary {\n    protected abstract frames: Map<string, Frame>;\n    constructor(\n        readonly product: Product  \n    ) {}\n    public get frameNames(): Array<string> {\n        return Array.from(this.frames.keys());\n    }\n    public getFrame(frameIndex: string): Frame | undefined {\n        return this.frames.get(frameIndex);\n    }\n}","import PerfectBoundBook from \"../Product/PerfectBoundBook\";\nimport BleededRectangleFrame from \"../Frame/BleededRectangleFrame\";\nimport BookCoverFrame from \"../Frame/BookCoverFrame\";\nimport BookFrameDictionary from \"./BookFrameDictionary\";\nimport Line from \"../Frame/Line\";\nimport PerfectBoundBookSoftCoverFrame from \"../Frame/PerfectBoundBookSoftCoverFrame\";\nimport PerfectBoundBookHardCoverFrame from \"../Frame/PerfectBoundHardCoverFrame\";\nimport { Frame } from \"../Frame\";\nimport { Mark } from \"../Frame/Frame\";\n\nexport default class PerfectBoundBookFrameDictionary extends BookFrameDictionary {\n    protected frames: Map<string, Frame>;\n    private static readonly INNER_PAGE_CUT_ERROR = 3;\n    private static readonly COVER_CUT_ERROR = 3;\n    private static readonly BOUND_SIDE_SAFE_DISTANCE: number = 5;\n    constructor(\n        readonly product: PerfectBoundBook\n    ) {\n        super(product);\n        this.frames = this.createFrames();    \n    }\n    protected createInnerPageFrames(): Map<string, BleededRectangleFrame> {\n        let innerPageFrames = new Map<string, BleededRectangleFrame>();\n        if (this.product.pagingDirection === \"BOTTOM_TO_TOP\") {\n            let pageFramePrototype = this.createBottomToTopPagedPageFramePrototype();\n            for (let i=1; i<=this.product.numberOfPages; i++) {\n                innerPageFrames.set(String(i), pageFramePrototype);\n            }\n            return innerPageFrames;\n        } else {\n            let leftPageFramePrototype: BleededRectangleFrame = this.createLeftInnerPageFramePrototype();\n            let rightPageFramePrototype: BleededRectangleFrame = this.createRightInnerPageFramePrototype();\n            switch (this.product.pagingDirection) {\n                case \"LEFT_TO_RIGHT\":\n                    for (let i=1; i<=this.product.numberOfPages; i++) {\n                        if ((i % 2 === 1)) {\n                            innerPageFrames.set(String(i), leftPageFramePrototype);\n                        } else {\n                            innerPageFrames.set(String(i), rightPageFramePrototype);\n                        }\n                    }\n                    return innerPageFrames;\n                case \"RIGHT_TO_LEFT\":\n                    for (let i=1; i<=this.product.numberOfPages; i++) {\n                        if ((i % 2 === 1)) {\n                            innerPageFrames.set(String(i), rightPageFramePrototype);\n                        } else {\n                            innerPageFrames.set(String(i), leftPageFramePrototype);\n                        }\n                    }\n                    return innerPageFrames;\n            }\n        }   \n    }\n    protected createLeftInnerPageFramePrototype(): BleededRectangleFrame {\n        class PerfectBoundLeftInnerPageFrame extends BleededRectangleFrame {\n            protected createMarks(): Array<Mark> {\n                \n\n                let cutErrorPercentageInMaxWidth: number\n                    = this.cutError / this.maxWidth * 100;\n                let cutErrorPercentageInMaxHeight: number\n                    = this.cutError / this.maxHeight * 100;\n                let boundSideSafeDistancePercentageInMaxWidth: number\n                    = PerfectBoundBookFrameDictionary.BOUND_SIDE_SAFE_DISTANCE / this.maxWidth * 100;\n                let safeAreaLeft: number = cutErrorPercentageInMaxWidth * 2;\n                let safeAreaRight: number = 100 - cutErrorPercentageInMaxWidth - boundSideSafeDistancePercentageInMaxWidth;\n                let safeAreaTop: number = cutErrorPercentageInMaxHeight * 2;\n                let safeAreaBottom: number = 100 - cutErrorPercentageInMaxHeight * 2;\n                let marks: Array<Mark> = [];\n                let safeArea: Mark;\n                let safeAreaWidth: number = safeAreaRight - safeAreaLeft;\n                let safeAreaHeight: number = safeAreaBottom - safeAreaTop;\n\n                const safeAreaSVGStyle: string = `\n                    width:100%; height:100%;\n                `;\n                const saveAreaRectStyle: string = `\n                fill:none;\n                stroke-width:2;\n                stroke:rgb(102 102 102) ;\n                stroke-dasharray:10,10;\n                `;\n                safeArea = {\n                    positionX: 0,\n                    positionY: 0,\n                    svgString :`\n                        <svg style='${safeAreaSVGStyle}' xmlns='http://www.w3.org/2000/svg' >\n                            <rect \n                                style='${saveAreaRectStyle}'\n                                x='${safeAreaLeft}%'\n                                y='${safeAreaTop}%'\n                                width='${safeAreaWidth}%'\n                                height='${safeAreaHeight}%' \n                            />\n                        </svg>\n                    `\n                }\n                marks.push(safeArea);\n                return marks;\n               // return `polygon(${safeAreaLeft}% ${safeAreaTop}%, ${safeAreaRight}% ${safeAreaTop}%, ${safeAreaRight}% ${safeAreaBottom}%, ${safeAreaLeft}% ${safeAreaBottom}%)`;\n            }\n        }\n        return new PerfectBoundLeftInnerPageFrame(\n            this.product.width,\n            this.product.height,\n            PerfectBoundBookFrameDictionary.INNER_PAGE_CUT_ERROR\n        );\n    }\n    protected createRightInnerPageFramePrototype(): BleededRectangleFrame {\n        class PerfectBoundRightInnerPageFrame extends BleededRectangleFrame {\n            protected createMarks(): Array<Mark> {\n                let marks: Array<Mark> = [];\n                let safeArea: Mark;\n                let cutErrorPercentageInMaxWidth: number\n                    = this.cutError / this.maxWidth * 100;\n                let cutErrorPercentageInMaxHeight: number\n                    = this.cutError / this.maxHeight * 100;\n                let boundSideSafeDistancePercentageInMaxWidth: number\n                    = PerfectBoundBookFrameDictionary.BOUND_SIDE_SAFE_DISTANCE / this.maxWidth * 100;\n                let safeAreaLeft: number = cutErrorPercentageInMaxWidth + boundSideSafeDistancePercentageInMaxWidth;\n                let safeAreaRight: number = 100 - cutErrorPercentageInMaxWidth * 2;\n                let safeAreaTop: number = cutErrorPercentageInMaxHeight * 2;\n                let safeAreaBottom: number = 100 - cutErrorPercentageInMaxHeight * 2;\n\n                let safeAreaWidth: number = safeAreaRight - safeAreaLeft;\n                let safeAreaHeight: number = safeAreaBottom - safeAreaTop;\n\n                const safeAreaSVGStyle: string = `\n                    width:100%; height:100%;\n                `;\n                const safeAreaRectStyle: string = `\n                    fill:none;\n                    stroke-width:2;\n                    stroke:rgb(102 102 102) ;\n                    stroke-dasharray:10,10;\n                `;\n                safeArea = {\n                    positionX: 0,\n                    positionY: 0,\n                    svgString :`\n                    <svg style='${safeAreaSVGStyle}' xmlns='http://www.w3.org/2000/svg' >\n                        <rect \n                            style='${safeAreaRectStyle}'\n                            x='${safeAreaLeft}%'\n                            y='${safeAreaTop}%'\n                            width='${safeAreaWidth}%'\n                            height='${safeAreaHeight}%' \n                        />\n                    </svg>\n                `\n            }\n                marks.push(safeArea);\n                return marks;\n               \n              //  return `polygon(${safeAreaLeft}% ${safeAreaTop}%, ${safeAreaRight}% ${safeAreaTop}%, ${safeAreaRight}% ${safeAreaBottom}%, ${safeAreaLeft}% ${safeAreaBottom}%)`;\n            }\n        }\n        return new PerfectBoundRightInnerPageFrame(\n            this.product.width,\n            this.product.height,\n            PerfectBoundBookFrameDictionary.INNER_PAGE_CUT_ERROR\n        );\n    }\n    protected createBottomToTopPagedPageFramePrototype(): BleededRectangleFrame {\n        class PerfectBoundBottomToTopPagedPageFrame extends BleededRectangleFrame {\n            protected createMarks(): Array<Mark> {\n                let marks: Array<Mark> = [];\n                let safeArea: Mark;\n                let cutErrorPercentageInMaxWidth: number\n                    = this.cutError / this.maxWidth * 100;\n                let cutErrorPercentageInMaxHeight: number\n                    = this.cutError / this.maxHeight * 100;\n                let boundSideSafeDistancePercentageInMaxHeight: number\n                    = PerfectBoundBookFrameDictionary.BOUND_SIDE_SAFE_DISTANCE / this.maxHeight * 100;\n                let safeAreaLeft: number = cutErrorPercentageInMaxWidth * 2;\n                let safeAreaRight: number = 100 - cutErrorPercentageInMaxWidth * 2;\n                let safeAreaTop: number = cutErrorPercentageInMaxHeight + boundSideSafeDistancePercentageInMaxHeight;\n                let safeAreaBottom: number = 100 - cutErrorPercentageInMaxHeight * 2;\n\n\n                let safeAreaWidth: number = safeAreaRight - safeAreaLeft;\n                let safeAreaHeight: number = safeAreaBottom - safeAreaTop;\n\n                const safeAreaSVGStyle: string = `\n                width:100%; height:100%;\n                `;\n                const safeAreaRectStyle: string = `\n                    fill:none;\n                    stroke-width:2;\n                    stroke:rgb(102 102 102) ;\n                    stroke-dasharray:10,10;\n                `;\n                safeArea = {\n                    positionX: 0,\n                    positionY: 0,\n                    svgString: `\n                        <svg style='${safeAreaSVGStyle}' xmlns='http://www.w3.org/2000/svg' >\n                            <rect \n                                style='${safeAreaRectStyle}'\n                                x='${safeAreaLeft}%'\n                                y='${safeAreaTop}%'\n                                width='${safeAreaWidth}%'\n                                height='${safeAreaHeight}%' \n                            />\n                        </svg>\n                    `\n            }\n                marks.push(safeArea);\n                return marks;\n                //return `polygon(${safeAreaLeft}% ${safeAreaTop}%, ${safeAreaRight}% ${safeAreaTop}%, ${safeAreaRight}% ${safeAreaBottom}%, ${safeAreaLeft}% ${safeAreaBottom}%)`;\n            }\n        }\n        return new PerfectBoundBottomToTopPagedPageFrame(\n            this.product.width,\n            this.product.height,\n            PerfectBoundBookFrameDictionary.INNER_PAGE_CUT_ERROR\n        );\n    }\n    protected createBookCoverFrame(): BookCoverFrame {\n        let bookWidth: number = this.product.width;         // 書寬\n        let bookHeight: number = this.product.height;       // 書高\n        let spineWidth: number = this.product.spineWidth;   // 書背寬\n        if (this.product.hardCovered) {\n            let outerHingeWidth: number                     // 書溝寬\n                = (spineWidth > 25)? 14 : 10;\n            return new PerfectBoundBookHardCoverFrame(\n                bookWidth,\n                bookHeight,\n                spineWidth,\n                outerHingeWidth,\n                PerfectBoundBookFrameDictionary.COVER_CUT_ERROR\n            );\n        }\n        return new PerfectBoundBookSoftCoverFrame(\n            bookWidth,\n            bookHeight,\n            spineWidth,\n            PerfectBoundBookFrameDictionary.COVER_CUT_ERROR\n        );\n    }\n}","import SaddleStichedBook from \"../Product/SaddleStichedBook\";\nimport BleededRectangleFrame from \"../Frame/BleededRectangleFrame\";\nimport BookFrameDictionary from \"./BookFrameDictionary\";\nimport RectangleFrame from \"../Frame/RectangleFrame\";\nimport SaddleStitchedBookCoverFrame from \"../Frame/SaddleStitchedBookCoverFrame\";\nimport { Frame } from \"../Frame\";\n\nexport default class SaddleStitchedBookFrameDictionary extends BookFrameDictionary {\n    protected frames: Map<string, Frame>;\n    private static readonly INNER_PAGE_CUT_ERROR = 3;\n    private static readonly COVER_CUT_ERROR = 3;\n    constructor(\n        readonly product: SaddleStichedBook\n    ) {\n        super(product);\n        this.frames = this.createFrames();     \n    }\n    protected createBookCoverFrame(): SaddleStitchedBookCoverFrame {\n        return new SaddleStitchedBookCoverFrame(\n            this.product.width,\n            this.product.height,\n            SaddleStitchedBookFrameDictionary.COVER_CUT_ERROR\n        );\n    }\n    protected createInnerPageFrames(): Map<string, BleededRectangleFrame> {\n        let innerFramePrototype: BleededRectangleFrame = this.createInnerPageFramePrototype();\n        let innerPageFrames = new Map<string, BleededRectangleFrame>();\n        for (let i=1; i<=this.product.numberOfPages; i++) {\n            this.innerPageFrames.set(String(i), innerFramePrototype);\n        }\n        return innerPageFrames;\n    }\n    protected createInnerPageFramePrototype(): BleededRectangleFrame {\n        return new BleededRectangleFrame(\n            this.product.width,\n            this.product.height,\n            SaddleStitchedBookFrameDictionary.INNER_PAGE_CUT_ERROR\n        );\n    }\n}","import SingleSheet from \"../Product/SingleSheet\";\nimport BleededRectangleFrame from \"../Frame/BleededRectangleFrame\";\nimport FrameDictionary from \"./FrameDictionary\";\nimport RectangleFrame from \"../Frame/RectangleFrame\";\n\nexport default class SingleSheetFrameDictionary extends FrameDictionary {\n    protected frames: Map<string, RectangleFrame>;\n    constructor(\n        readonly product: SingleSheet \n        ) {\n        super(product);\n        this.frames = this.createFrames();\n    }\n    private static readonly CUT_ERROR = 2;\n    protected createFrames(): Map<string, RectangleFrame> {\n        let frame = new BleededRectangleFrame (\n            this.product.width,\n            this.product.height,\n            SingleSheetFrameDictionary.CUT_ERROR,\n        );\n        let frames = new Map<string, RectangleFrame>();\n        frames.set(\"正面\", frame);\n        if (this.product.isDoubleSided) {\n            frames.set(\"背面\", frame);\n        }\n        return frames;\n    }\n}","import Coat from \"./Material/Coat\";\nimport PaperMaterial from \"./Material/PaperMaterial\";\nimport Paper from \"./Material/Paper\";\n\nexport {\n    Coat,\n    PaperMaterial,\n    Paper\n};\n","\nimport { Coat as CoatInterface } from \"@gainhow-review/interfaces\";\n\nexport default class Coat implements CoatInterface {\n    constructor (\n        readonly name: string,\n        readonly chineseName: string\n    ) {}\n}","import { Type } from \"class-transformer\";\nimport { Paper as PaperInterface } from \"@gainhow-review/interfaces\";\nimport PaperMaterial from \"./PaperMaterial\";\n\nexport default class Paper implements PaperInterface {\n\n    @Type(() => PaperMaterial)\n    readonly material: PaperMaterial;\n    constructor(\n        readonly name: string,\n        material: PaperMaterial,        // 材質\n        readonly thickness: number,     // 厚度（mm）\n        readonly weight: number,        // 單位面積重（g/m^2）\n        readonly isSmooth: boolean,     // 表面是否光滑（會影響能否上膜）\n        readonly description?: string\n    ) {\n        this.material = material;\n    }\n}","\nimport { PaperMaterial as PaperMaterialInterface } from \"@gainhow-review/interfaces\";\n\nexport default class PaperMaterial implements PaperMaterialInterface {\n    constructor(\n        readonly name: string,\n        readonly aliases?: Array<string>\n    ) {}\n}","\n\nimport Product from \"./Product/Product\";\nimport SingleSheet from \"./Product/SingleSheet\";\nimport SaddleStichedBook from \"./Product/SaddleStichedBook\";\nimport PerfectBoundBook from \"./Product/PerfectBoundBook\";\nimport { ProductSubtypeName } from \"@gainhow-review/interfaces\";\nimport { deserialize, serialize } from \"class-transformer\";\n\nexport {\n    Product,\n    SingleSheet,\n    SaddleStichedBook,\n    PerfectBoundBook,\n};\n\nexport function jsonToProduct(text: string): Product {\n    let plainObject: any = JSON.parse(text);\n    let subTypeName: any = plainObject.__productSubType;\n    for (let {name, value} of PRODUCT_SUBTYPES) {\n        if (subTypeName === name) return deserialize(value, text);\n    }\n    let validSubtypeNames: string[] = PRODUCT_SUBTYPES.map(({name, value}) => name)\n    throw new Error(`'__productSubType' in json object should contain any value in ${validSubtypeNames.toString()}`);\n}\n\nexport function productToJson(product: Product): string {\n    return serialize(product);\n}\n\nexport const PRODUCT_SUBTYPES: {\n    name: ProductSubtypeName; value: any\n}[] = [\n    { name : \"SingleSheet\", value: SingleSheet },\n    { name : \"SaddleStichedBook\", value: SaddleStichedBook },\n    { name : \"PerfectBoundBook\", value: PerfectBoundBook }\n];\n\nexport const PRODUCT_TYPE_DISCRIMINATOR = {\n    property: '__productSubType',\n    subTypes: PRODUCT_SUBTYPES\n};","import { BookPagingDirection, BookSubtypeName, Book as BookInterface } from \"@gainhow-review/interfaces\";\nimport { Column, Entity } from \"typeorm\";\nimport Coat from \"../Material/Coat\";\nimport Paper from \"../Material/Paper\";\nimport Product from \"./Product\";\n\nexport default abstract class Book extends Product implements BookInterface {\n\n    readonly abstract __productSubType: BookSubtypeName;\n    constructor(\n        public width: number,\n        public height: number,\n        public numberOfPages: number,\n        public pagingDirection: BookPagingDirection,\n        public coverPaper: Paper,\n        public innerPagesPaper: Paper,\n        public coverCoating?: Coat,\n        public innerPageCoating?: Coat,\n        ) {\n        super();\n    }\n\n    /**\n     * 書背寬度（mm）\n     */\n    public get spineWidth(): number {\n        return this.numberOfPages / 2 * this.innerPagesPaper.thickness;\n    }\n    productSubTypeChineseName = \"書籍\";\n    public getInfo(): Array<string> {\n        let coverInfo: string = `封面：${this.coverPaper}、${(this.coverCoating)? this.coverCoating.chineseName:'不上膜'}`;\n        let innerPageInfo: string = `內頁：${this.innerPagesPaper}、${(this.innerPageCoating)? this.innerPageCoating.chineseName:'不上膜'}`\n       \n        let pagingDirectionInChineseName: string ;\n        switch (this.pagingDirection) {\n            case \"LEFT_TO_RIGHT\" :\n                pagingDirectionInChineseName = '由左往右';\n                break;\n            case \"RIGHT_TO_LEFT\" :\n                pagingDirectionInChineseName = '由右往左';\n                break;\n            case \"BOTTOM_TO_TOP\" :\n                pagingDirectionInChineseName = '由下往上';\n                break;\n        }\n     \n        return [ \n            `${this.productSubTypeChineseName}，${this.numberOfPages}頁`,\n            `寬 ${this.width} x 長 ${this.height}`,\n            `翻頁方向：${pagingDirectionInChineseName}翻`,\n            `${coverInfo}`,\n            `${innerPageInfo}`\n        ];\n    }\n}","import Book from \"./Book\";\nimport { BookPagingDirection, PerfectBoundBook as PerfectBoundBookInterface } from \"@gainhow-review/interfaces\";\nimport Paper from \"../Material/Paper\";\nimport Coat from \"../Material/Coat\";\nimport { Type } from \"class-transformer\";\nimport FrameDictionary from \"../FrameDictionary/FrameDictionary\";\nimport PerfectBoundBookFrameDictionary from \"../FrameDictionary/PerfectBoundBookFrameDictionary\";\n\nexport default abstract class PerfectBoundBook extends Book implements PerfectBoundBookInterface {\n    readonly __productSubType = \"PerfectBoundBook\";\n\n    @Type(() => Paper)\n    public coverPaper!: Paper;\n\n    @Type(() => Paper)\n    public innerPagesPaper!: Paper;\n\n    @Type(() => Coat)\n    public coverCoating?: Coat;\n\n    @Type(() => Coat)\n    public innerPageCoating?: Coat;\n    constructor(\n        public width: number,\n        public height: number,\n        public numberOfPages: number,\n        public pagingDirection: BookPagingDirection,\n        coverPaperTexture: Paper,\n        innerPagesPaperTexture: Paper,\n        coverCoating?: Coat,\n        innerPageCoating?: Coat,\n        public hardCovered: boolean = false,\n        public threadSewn: boolean = false,\n        public spineStyle: \"standard\" | \"rounded\" = \"standard\",\n    ) {\n        super(\n            width,\n            height,\n            numberOfPages,\n            pagingDirection,\n            coverPaperTexture,\n            innerPagesPaperTexture,\n            coverCoating,\n            innerPageCoating\n        );\n\n    }\n\n    protected _frameDictionary?: FrameDictionary;\n    protected createFrameDictionary(): FrameDictionary {\n        return new PerfectBoundBookFrameDictionary(this);\n    }\n}","\n\nimport * as Interface from \"@gainhow-review/interfaces\";\nimport FrameDictionary from \"../FrameDictionary/FrameDictionary\";\nimport { deserialize, Exclude, serialize } from \"class-transformer\";\n\n\n\n\nexport default abstract class Product implements Interface.Product {\n\n    readonly abstract __productSubType: Interface.ProductSubtypeName;   // 給class transformer判斷它的實例是哪個subclass\n\n    readonly abstract productSubTypeChineseName: string;\n    \n    @Exclude()\n    protected abstract _frameDictionary?: FrameDictionary;\n\n    public get frameDictionary(): FrameDictionary {\n        return this.getOrCreateFrameDictionary();\n    }\n    protected getOrCreateFrameDictionary(): FrameDictionary {\n        if(!this._frameDictionary) return this.createAndSetFrameDictionary();\n        return this._frameDictionary;\n    }\n    private createAndSetFrameDictionary(): FrameDictionary {\n        this._frameDictionary = this.createFrameDictionary();\n        return this._frameDictionary;\n    }\n    protected abstract createFrameDictionary(): FrameDictionary;\n    public abstract getInfo(): Array<string>;\n}\n\n\n\n","import Book from \"./Book\";\nimport {BookPagingDirection, SaddleStichedBook as SaddleStichedBookInterface} from \"@gainhow-review/interfaces\";\nimport Paper from \"../Material/Paper\";\nimport Coat from \"../Material/Coat\";\nimport SaddleStitchedBookFrameDictionary from \"../FrameDictionary/SaddleStitchedBookFrameDictionary\";\nimport FrameDictionary from \"../FrameDictionary/FrameDictionary\";\n\nexport default class SaddleStichedBook extends Book implements SaddleStichedBookInterface {\n    readonly __productSubType: \"SaddleStichedBook\" = \"SaddleStichedBook\";\n    protected _frameDictionary?: SaddleStitchedBookFrameDictionary;\n    constructor(\n        coverWidth: number, \n        coverHeight: number, \n        numberOfPages: number,\n        pagingDirection: BookPagingDirection,\n        coverPaperTexture: Paper,\n        innerPagesPaperTexture: Paper, \n        coverCoating?: Coat, \n        innerPageCoating?: Coat\n    ) {\n        super(\n            coverWidth, \n            coverHeight, \n            numberOfPages,\n            pagingDirection,\n            coverPaperTexture, \n            innerPagesPaperTexture, \n            coverCoating, \n            innerPageCoating\n        );\n        this.productSubTypeChineseName = '騎馬釘書';\n    }\n    protected createFrameDictionary(): FrameDictionary {\n        return new SaddleStitchedBookFrameDictionary(this);\n    }\n}","\nimport {SingleSheet as SingleSheetInterface} from \"@gainhow-review/interfaces\";\nimport Product from \"./Product\";\nimport { Exclude, Type } from \"class-transformer\";\nimport Coat from \"../Material/Coat\";\nimport Paper from \"../Material/Paper\";\nimport SingleSheetFrameDictionary from \"../FrameDictionary/SingleSheetFrameDictionary\";\n\nexport default class SingleSheet extends Product implements SingleSheetInterface {\n    productSubTypeChineseName = \"單張\";\n    public getInfo(): Array<string> {\n        return [\n            \"單張\",\n            `寬 ${this.width} x 長 ${this.height}`,\n            this.paper.name,\n            `正面：${(this.frontSideCoat)? this.frontSideCoat: \"不上膜\"}`,\n            `背面：${(this.backSideCoat)? this.backSideCoat: \"不上膜\"}`\n        ];\n    }\n    readonly __productSubType: \"SingleSheet\" = \"SingleSheet\";\n    \n    @Exclude()\n    protected _frameDictionary?: SingleSheetFrameDictionary;\n\n    protected createFrameDictionary(): SingleSheetFrameDictionary {\n        return new SingleSheetFrameDictionary(this);\n    }\n\n    @Type(() => Paper)\n    public paper: Paper;\n\n    @Type(() => Coat)\n    public frontSideCoat?: Coat;\n\n    @Type(() => Coat)\n    public backSideCoat?: Coat;\n\n    constructor(\n        public width: number,\n        public height: number,\n        public isDoubleSided: boolean,\n        paper: Paper,\n        frontSideCoat?: Coat,\n        backSideCoat?: Coat\n    ) {\n        super();\n        this.paper = paper;\n        this.frontSideCoat = frontSideCoat;\n        this.backSideCoat = backSideCoat;\n    }\n}","\nimport FramedPage from \"./Review/FramedPage\";\nimport ReviewModel from \"./Review/ReviewModel\";\nimport ReviewItem from \"./Review/ReviewItem\";\nimport ReviewStatus from \"./Review/ReviewStatus\";\nimport UploadFileStatus from \"./Review/UploadFileStatus\";\nimport UploadFilePageInfo from \"./Review/UploadFilePageInfo\";\nimport ReviewRegistrationInfo from \"./Review/ReviewRegistrationInfo\";\nimport ReviewReception from \"./Review/ReviewReception\";\n\nexport {\n    FramedPage,\n    ReviewModel,\n    ReviewItem,\n    ReviewStatus,\n    UploadFileStatus,\n    UploadFilePageInfo,\n    ReviewRegistrationInfo,\n    ReviewReception\n}\n","\nimport { Exclude, Expose } from \"class-transformer\";\nimport Frame from \"../Frame/Frame\";\nimport { FramedPage as FramedPageInterface} from \"@gainhow-review/interfaces\";\nimport ReviewModel from \"./ReviewModel\";\nimport { UploadFilePageInfo, UploadFileStatus } from \"../Review\";\nimport { Column, Entity, ManyToOne, PrimaryColumn, PrimaryGeneratedColumn } from \"typeorm\";\n\n@Entity()\nexport default class FramedPage implements FramedPageInterface {\n\n    @PrimaryColumn('varchar', { length: 255 })\n    public frameId: string;  // 資料庫要用的primary key\n\n    @Column('int')\n    sourceFileIndex?: number;\n\n    @Column('int')\n    sourcePageNumber?: number;\n\n    @Column('text')\n    resultingJpegUrl?: string;\n\n    @Column('text')\n    resultingPdfUrl?: string;\n\n    @Column('int')\n    private _rotationDegree: number;\n\n    @Exclude()\n    @ManyToOne(() => ReviewModel, (model: ReviewModel) => model.framedPages)\n    public reviewModel: ReviewModel;\n\n    @Column('varchar', { length: 16 })\n    public readonly frameName: string;\n\n    @Column('int')\n    public positionX: number;\n\n    @Column('int')\n    public positionY: number;\n\n    @Column('int')\n    public scaleX: number;\n\n    @Column('int')\n    public scaleY: number;\n\n    constructor (\n        frameId: string,\n        frameName: string,\n        reviewModel: ReviewModel,\n        positionX: number = 0,\n        positionY: number = 0,\n        scaleX: number = 1,\n        scaleY: number = 1,\n        _rotationDegree: number = 0\n    ) {\n        this.frameId = frameId;\n        this.frameName = frameName;\n        this.reviewModel = reviewModel;\n        this.positionX = positionX;\n        this.positionY = positionY;\n        this.scaleX = scaleX;\n        this.scaleY = scaleY;\n        this._rotationDegree = _rotationDegree;\n    }\n\n    public getFrame(): Frame | undefined {\n      return this.reviewModel.getFrame(this.frameName);\n    }\n\n    public getSourcePageInfo(): UploadFilePageInfo | undefined {\n        if (this.sourceFileIndex === undefined\n            || this.sourcePageNumber === undefined\n        ) {\n            return undefined;\n        }\n        \n        let fileStatus: UploadFileStatus | undefined = this.reviewModel.reviewItem.status.uploadFileStatuses[this.sourceFileIndex];\n        if (!fileStatus || !fileStatus.pageInfos) {\n            return undefined;\n        }\n        return fileStatus.pageInfos[this.sourcePageNumber];\n    }\n\n    public reset(): void {\n        this.rotate(0);   // 回到原本的角度\n        this.moveTo(0, 0);  // 回到預設原點\n        this.scale(1, 1);   // 回到原本的縮放\n    }\n\n    // 旋轉\n    public rotate(degree: number): void {\n        this.rotationDegree = degree;\n    }\n\n    public get rotationDegree(): number {\n        return this._rotationDegree;\n    }\n\n    public set rotationDegree(degree: number) {\n        this._rotationDegree = degree % 360;\n    }\n    // 縮放\n    public scale(x: number, y: number): void {\n        if(x > 0 && y > 0) {\n            this.setScale(x, y);\n        }\n        else {\n            //TODO: 錯誤? 就默默不讓他做? 提醒? 還是0沒有關係?\n        }\n    }\n\n    private setScale(x: number, y:number) {\n        this.scaleX = x;\n        this.scaleY = y;\n    }\n\n    // 移動位置\n    public moveTo(x: number, y: number): void {\n        // 檢查是否超出去，最多就是剛好超出去?防呆要在這裡嗎? 還是說寫前端的時候再防就好了\n        this.setPosition(x,y);\n    }\n\n    private setPosition(x: number, y: number) {\n        this.positionX = x;\n        this.positionY = y;\n    }\n\n    public clone(): FramedPage {\n        return Object.assign(this);\n    }\n    // 需要的method : setFile  getPreviewImage getResultImage getResultFlie\n    // cleanFile? 空白頁? 選擇了頁是不是可以改選擇用空白頁 \n\n    private calculateInitialPostionXandPostionY () {\n        let positionX: number;\n        let positionY: number;\n        let sourcePage: UploadFilePageInfo | undefined= this.getSourcePageInfo();\n            let frame: Frame | undefined = this.getFrame();\n            if (sourcePage && frame) { //有指定的sourceFile\n                let sourceWidth: number = sourcePage.widthInMm;\n                let sourceHeight: number = sourcePage.heightInMm;\n                let frameWidth: number = frame.maxWidth;\n                let frameHeight: number = frame.maxHeight;\n                positionX = (frameWidth - sourceWidth) / 2;\n                positionY =(frameHeight - sourceHeight) / 2;\n            }\n            else {\n                positionX = 0;\n                positionY = 0;\n            }\n        return ({\n            positionX: positionX,\n            positionY: positionY\n        })\n    }\n}\n","\nimport FrameDictionary from \"../FrameDictionary/FrameDictionary\";\nimport { PRODUCT_TYPE_DISCRIMINATOR, Product, productToJson, jsonToProduct } from \"../Product\"\nimport { ReviewItem as ReviewItemInterface } from \"@gainhow-review/interfaces\"\nimport ReviewModel from \"./ReviewModel\";\nimport ReviewStatus from \"./ReviewStatus\";\nimport { deserialize, Exclude, serialize, Type } from \"class-transformer\";\nimport FramedPage from \"./FramedPage\";\nimport { Entity, Column, PrimaryGeneratedColumn, OneToMany, OneToOne, AfterLoad, BeforeInsert, BeforeUpdate, PrimaryColumn } from \"typeorm\";\nimport UploadFileStatus from \"./UploadFileStatus\";\nimport UploadFilePageInfo from \"./UploadFilePageInfo\";\n\n@Entity()\nexport default class ReviewItem implements ReviewItemInterface {\n    \n    @PrimaryColumn('varchar', { length: 255 })\n    readonly reviewId: string; // 資料庫要用的primary key\n\n    @Type(() => ReviewModel)\n    @OneToMany(() => ReviewModel, (model: ReviewModel) => model.reviewItem)\n    protected _models: Array<ReviewModel> = [];\n\n    @Type(() => ReviewStatus)\n    @Column(() => ReviewStatus)\n    public readonly status: ReviewStatus;\n\n    @Type(() => Product, {\n        discriminator: PRODUCT_TYPE_DISCRIMINATOR\n    })\n    private _product: Product;\n    public get product(): Product {\n        return this._product;\n    }\n\n    @Exclude()\n    @Column('text')\n    private _serializedProduct?: string;\n    @AfterLoad()\n    deserializeProduct(): void {\n        if (this._serializedProduct === undefined) throw new Error(\"TypeORM should have set '__serializedProduct' but didn't.\");\n        this._product = jsonToProduct(this._serializedProduct);\n    }\n    @BeforeInsert()\n    serializeProduct(): void {\n        this._serializedProduct = productToJson(this._product);\n    }\n    \n    constructor(\n        reviewId: string,\n        status: ReviewStatus,\n        product: Product,\n    ) {\n        this.reviewId = reviewId;\n        this.status = status;\n        this._product = product;\n        this.createAndSetBlankModels();\n    }\n\n    public get numberOfModels(): number {\n        return this.status.numberOfModels;\n    }\n\n    public getFramedPage(modelIndex: number, frameIndex: number): FramedPage | undefined {\n        let model: ReviewModel | undefined = this.models[modelIndex];\n        if (!model) return undefined;\n        return model.framedPages[frameIndex];\n    }\n\n    public set models(models: Array<ReviewModel>) {\n        if (models.length !== this.numberOfModels) {\n            throw new Error(`number of models inconsistent: should be ${this.numberOfModels}, but has ${models.length}`);\n        }\n        this._models = models;\n    }\n\n    public get models(): Array<ReviewModel> {\n        if (this._models.length !== this.numberOfModels) return this.createAndSetBlankModels();\n        return this._models;\n    }\n\n    protected createAndSetBlankModels(): Array<ReviewModel> {\n        this.models = this.createBlankModels();\n        return this.models;\n    }\n    protected createBlankModels(): Array<ReviewModel> {\n        let models = [];\n        for (let modelNumber: number = 1; modelNumber <= this.numberOfModels; modelNumber++) {\n            models.push(new ReviewModel(\n                generateModelIdFromReviewId(this.reviewId, modelNumber),\n                `第${modelNumber}款`,\n                this\n            ))\n        }\n        return models;\n\n        function generateModelIdFromReviewId(reviewId: string, modelNumber: number): string {\n            let modelNumberInString: string = modelNumber.toString();\n            let numberOfModelNumberDigits: number = modelNumberInString.length;\n            const modelIdMaximalLength: number = 3;\n            let numberOfZerosToAppend: number = modelIdMaximalLength - numberOfModelNumberDigits;\n            let modelId: string = reviewId + '0'.repeat(numberOfZerosToAppend) + modelNumberInString;\n            return modelId;\n        }\n    }\n\n    public get frameDictionary(): FrameDictionary {\n        return this._product.frameDictionary;\n    }\n\n    public static fromJson(text: string): ReviewItem {\n        let item: ReviewItem = deserialize(ReviewItem, text);\n        item.models.forEach((model: ReviewModel) => {\n            model.reviewItem = item;\n            model.framedPages.forEach((framedPage: FramedPage) => {\n                framedPage.reviewModel = model;\n            });\n        });\n        item.status.uploadFileStatuses.forEach((fileStatus: UploadFileStatus) => {\n            fileStatus.reviewStatus = item.status;\n            fileStatus.pageInfos?.forEach((pageInfo: UploadFilePageInfo) => {\n                pageInfo.fileStatus = fileStatus;\n            });\n        });\n        return item;\n    }\n    public static toJson(item: ReviewItem): string {\n        return serialize(item);\n    }\n\n\n    public setReviewModelImmutably(modelIndex: number, model: ReviewModel): ReviewItem {\n        let newReviewItem = new ReviewItem(\n            this.reviewId,\n            this.status,\n            this._product\n        );\n        let newReviewModels: Array<ReviewModel>\n            = [...this.models];\n        newReviewModels[modelIndex] = model;\n        newReviewModels.forEach((model) => {\n            model.reviewItem = newReviewItem;\n        })\n        newReviewItem.models = newReviewModels;\n        return newReviewItem;\n    }\n\n    public setFramedPageImmutably(modelIndex: number, frameIndex: number, framedPage: FramedPage): ReviewItem {\n        let oldModel: ReviewModel | undefined\n            = this.models[modelIndex];\n        if (!oldModel) throw new Error(\"modelIndex out of index\");\n        let newModel: ReviewModel = oldModel.setFramedPageImmutably(frameIndex, framedPage);\n        return this.setReviewModelImmutably(modelIndex, newModel);\n    }\n}","\nimport { deserialize, Exclude, Expose, Type } from \"class-transformer\";\nimport Frame from \"../Frame/Frame\";\nimport FrameDictionary from \"../FrameDictionary/FrameDictionary\";\nimport { ReviewModel as ReviewModelInterface} from \"@gainhow-review/interfaces\";\nimport FramedPage from \"./FramedPage\";\nimport ReviewItem from \"./ReviewItem\";\nimport { Column, Entity, ManyToOne, OneToMany, PrimaryColumn } from \"typeorm\";\nimport { ConnectionOptions } from \"tls\";\n\n@Entity()\nexport default class ReviewModel implements ReviewModelInterface {\n\n    @PrimaryColumn('varchar', { length: 255 })\n    public modelId: string;  // 資料庫要用的primary key\n\n    @Column('varchar', { length: 16 })\n    public readonly modelName: string;\n\n    @Type(() => FramedPage)\n    @OneToMany(() => FramedPage, (framedPage: FramedPage) => framedPage.reviewModel)\n    protected _framedPages: Array<FramedPage> = [];\n\n    @Exclude()\n    protected _frameDictionary?: FrameDictionary;\n\n    @Exclude()\n    @ManyToOne(() => ReviewItem, (reviewItem: ReviewItem) => reviewItem.models)\n    public reviewItem: ReviewItem;\n\n    constructor(\n        modelId: string,\n        modelName: string,\n        reviewItem: ReviewItem\n    ) {\n        this.modelId = modelId;\n        this.modelName = modelName;\n        this.reviewItem = reviewItem;\n        this.createAndSetBlankFramedPages();\n    }\n\n    public getFrame(name: string): Frame | undefined {\n        return this.frameDictionary.getFrame(name);\n    }\n\n    public setFramedPageImmutably(index: number, framedPage: FramedPage): ReviewModel {\n        let newReviewModel = new ReviewModel(\n            this.modelId,\n            this.modelName,\n            this.reviewItem\n        );\n        let newFramedPages = new Array<FramedPage>();\n            newFramedPages = [...this.framedPages];\n            newFramedPages[index] = framedPage;\n            \n        newFramedPages.forEach((framedPage) => {\n            framedPage.reviewModel = newReviewModel;\n        })\n        newReviewModel.framedPages = newFramedPages;\n        return newReviewModel;\n    }\n\n    public get framedPages(): Array<FramedPage> {\n        if (this._framedPages.length !== this.numberOfFramedPages) return this.createAndSetBlankFramedPages();\n        return this._framedPages;\n    }\n\n    public get numberOfFramedPages(): number {\n        return this.frameNames.length;\n    }\n    public set framedPages(framedPages: Array<FramedPage>) {\n        if (framedPages.length !== this.numberOfFramedPages) throw new Error(\"map size inconsistent\");\n        this._framedPages = framedPages;\n    }\n    protected createAndSetBlankFramedPages(): Array<FramedPage> {\n        this.framedPages = this.createBlankFramedPages();\n        return this.framedPages;\n    }\n\n    protected createBlankFramedPages(): Array<FramedPage> {\n        return this.frameNames.map((name, frameIndex) => {\n            let frameId: string = generateFrameIdFromModelId(this.modelId, frameIndex + 1);\n            return new FramedPage(\n                frameId,\n                name,\n                this\n            );\n        });\n        function generateFrameIdFromModelId(modelId: string, frameNumber: number): string {\n            let frameNumberInString: string = frameNumber.toString();\n            let numberOfFrameNumberDigits: number = frameNumberInString.length;\n            const frameNumberMaximalLength: number = 4;\n            let numberOfZerosToAppend: number = frameNumberMaximalLength - numberOfFrameNumberDigits;\n            let frameId: string = modelId + '0'.repeat(numberOfZerosToAppend) + frameNumberInString;\n            return frameId;\n        }\n    }\n    public get frameNames(): Array<string> {\n        return this.frameDictionary.frameNames;\n    }\n    public get frameDictionary(): FrameDictionary {\n        if (!this._frameDictionary) return this.getAndSetFrameDictionary();\n        return this._frameDictionary;\n    }\n    protected getAndSetFrameDictionary(): FrameDictionary {\n        this._frameDictionary = this.reviewItem.frameDictionary;\n        return this._frameDictionary;\n    }\n}","import Product from \"../Product/Product\";\nimport { ReviewRegistrationInfo as ReviewRegistrationInfoInterface } from \"@gainhow-review/interfaces\";\nimport { PRODUCT_TYPE_DISCRIMINATOR } from \"../Product\";\nimport { deserialize, Type, serialize } from \"class-transformer\";\nexport default class ReviewRegistrationInfo implements ReviewRegistrationInfoInterface {\n    \n    @Type(() => Product, {\n        discriminator: PRODUCT_TYPE_DISCRIMINATOR\n    })\n    public readonly product: Product;\n    constructor (\n        public readonly numberOfModels: number,\n        product: Product,\n    ) {\n        this.product = product;\n    }\n\n    public static toJson(info: ReviewRegistrationInfo) {\n        return serialize(info);\n    }\n\n    public static fromJson(text: string): ReviewRegistrationInfo {\n        return deserialize(ReviewRegistrationInfo, text);\n    }\n}","import { deserialize, serialize, Type } from \"class-transformer\";\nimport { ReviewingProgress, REVIEWING_PROGRESS, ReviewStatus as ReviewStatusInterface } from \"@gainhow-review/interfaces\";\nimport UploadFileStatus from \"./UploadFileStatus\";\nimport { Column, Entity, OneToMany, PrimaryGeneratedColumn } from \"typeorm\";\nimport { UploadFilePageInfo } from \"../Review\";\n\nexport default class ReviewStatus implements ReviewStatusInterface {\n\n    @Type(() => UploadFileStatus)\n    @OneToMany(() => UploadFileStatus, (fileStatus: UploadFileStatus) => fileStatus.reviewStatus)\n    public uploadFileStatuses: UploadFileStatus[] = [];\n\n    // TODO: enum? string literal? serializable?\n    @Column({\n        type: 'enum',\n        enum: REVIEWING_PROGRESS\n    })\n    public progress: ReviewingProgress;\n\n    @Column('int')\n    public numberOfFiles: number = 0;\n\n    @Column('int')\n    public numberOfModels: number;\n\n    constructor (\n        numberOfModels: number,\n    ) {\n        this.numberOfModels = numberOfModels;\n        this.progress = \"REGISTERED\";\n    }\n    public toJson(status: ReviewStatus): string {\n        return serialize(status);\n    }\n    public fromJson(text: string): ReviewStatus {\n        let reviewStatus: ReviewStatus = deserialize(ReviewStatus, text);\n        reviewStatus.uploadFileStatuses.forEach((fileStatus: UploadFileStatus) => {\n            fileStatus.reviewStatus = reviewStatus;\n            fileStatus.pageInfos?.forEach((pageInfo: UploadFilePageInfo) => {\n                pageInfo.fileStatus = fileStatus;\n            });\n        });\n        return reviewStatus;\n    }\n}","import { UploadFilePageInfo as UploadFilePageInfoInterface } from '@gainhow-review/interfaces';\nimport { Exclude, Expose } from 'class-transformer';\nimport { Column, Entity, ManyToOne, PrimaryGeneratedColumn } from 'typeorm';\nimport { UploadFileStatus } from '../Review';\n\n@Entity()\nexport default class UploadFilePageInfo implements UploadFilePageInfoInterface {\n\n    @PrimaryGeneratedColumn()\n    readonly id?: number;\n\n    @Column('text')\n    readonly pdfAddress: string;\n\n    @Column('text')\n    readonly jpegAddress: string;\n\n    @Column('int')\n    readonly widthInMm: number;\n\n    @Column('int')\n    readonly heightInMm: number;\n\n    @Exclude()\n    @ManyToOne(() => UploadFileStatus, (fileStatus) => fileStatus.pageInfos)\n    public fileStatus: UploadFileStatus;\n    \n    constructor(\n        fileStatus: UploadFileStatus,\n        pdfAddress: string,\n        jpegAddress: string,\n        widthInMm: number,\n        heightInMm: number\n    ) {\n        this.fileStatus = fileStatus;\n        this.pdfAddress = pdfAddress;\n        this.jpegAddress = jpegAddress;\n        this.widthInMm = widthInMm;\n        this.heightInMm = heightInMm;\n    }\n}","\nimport { Exclude, Expose, Type } from \"class-transformer\";\nimport { UploadFileProcessingStage, UploadFileStatus as UploadFileStatusInterface, UPLOAD_FILE_PROCESSING_STAGES } from \"@gainhow-review/interfaces\";\nimport UploadFilePageInfo from \"./UploadFilePageInfo\";\nimport { Column, Entity, ManyToOne, OneToMany, PrimaryGeneratedColumn } from \"typeorm\";\nimport { ReviewStatus } from \"../Review\";\n\n@Entity()\nexport default class UploadFileStatus implements UploadFileStatusInterface {\n \n    @PrimaryGeneratedColumn()       // 由typeorm在第一次存到資料庫的時候幫忙生成\n    @Exclude()\n    public id?: number;             // 資料庫用的primary key\n\n    @Column('text')\n    readonly fileName: string;\n\n    @Column('varchar', { length: 255 })\n    public uploadToken?: string;   // 跟轉檔伺服器溝通用的id\n\n    @Column({\n        type: \"enum\",\n        enum: UPLOAD_FILE_PROCESSING_STAGES,\n        // default: \"UPLOADING\"\n    })\n    public currentStage: UploadFileProcessingStage;\n\n    @Column('int')\n    public numberOfPages?: number;\n\n    @Column('text')\n    public fileAddress?: string;\n\n    @Type(() => UploadFilePageInfo)\n    @OneToMany(() => UploadFilePageInfo, (pageInfo: UploadFilePageInfo) => pageInfo.fileStatus)\n    public pageInfos?: Array<UploadFilePageInfo>;\n\n    @Column({\n        type: \"enum\",\n        enum: UPLOAD_FILE_PROCESSING_STAGES,\n        // default: undefined\n    })\n    public errorStage?: UploadFileProcessingStage;\n\n    @Expose()\n    @ManyToOne(() => ReviewStatus, (reviewStatus: ReviewStatus) => reviewStatus.uploadFileStatuses)\n    reviewStatus: ReviewStatus;\n\n    constructor (\n        reviewStatus: ReviewStatus,\n        fileName: string\n    ) {\n        this.reviewStatus = reviewStatus;\n        this.fileName = fileName;\n        this.currentStage = \"UPLOADING\";\n    }\n\n    @Expose()\n    public get hasError(): boolean {\n        if (this.errorStage) return true;\n        return false;\n    }\n}\n","import { Product } from './lib/product';\n\nexport * from './lib/pricing';\nexport * from './lib/api';\nexport * from './lib/printer';\nexport * from './lib/product';\nexport * from './lib/review';\nexport * from './lib/transaction';\n\n","\n/** ============ 集單＆組版 ============ */\n\n\n\n// 數位印刷機\nexport interface Printer {\n\tneedJdf: boolean;\n\tjdfRequestUrl?: string;\n\tpaperStockLimits: PaperStockLimits;\n\tvalidPaperNames: string[];\n};\n// 紙材限制\ninterface PaperStockLimits {\n\tstockType: \"sheet\" | \"roll\";    // 紙材類型：單張／卷裝\n\tmaxWidth: number;               // 寬度上限\n\tminWidth: number;               // 寬度下限\n\tmaxHeight: number;              // 高度上限\n\tminHeight: number;              // 高度下限\n\tmaxThickness: number;           // 厚度上限\n\tminThickness: number;           // 厚度下限\n};\n","\nexport type ProductSubtypeName\n    = \"SingleSheet\"\n    | BookSubtypeName;\n\nexport interface Product {\n    readonly __productSubType: ProductSubtypeName;\n}\n\n/**\n* 書籍\n* @enum  \n* \n*/\n// 總共有的所有書籍類別: 騎馬釘、蝴蝶書、膠裝書\nexport const BOOK_SUBTYPE_NAMES = [\n    \"SaddleStichedBook\",    // 騎馬釘\n    \"PerfectBoundBook\",     // 膠裝（平裝（純膠裝）／穿線膠裝／方背精裝／圓背精裝／穿線方背精裝／穿線圓背精裝）\n] as const;\nexport type BookSubtypeName = typeof BOOK_SUBTYPE_NAMES[number];\n\n// 翻頁方式: 左翻與右翻\nexport const BOOK_PAGING_DIRECTIONS = [\n    \"LEFT_TO_RIGHT\",    // 直式由左往右翻\n    \"RIGHT_TO_LEFT\",    // 直式由右往左翻\n    \"BOTTOM_TO_TOP\"     // 橫式\n] as const;\nexport type BookPagingDirection = typeof BOOK_PAGING_DIRECTIONS[number];\n\n// 書籍參數\nexport interface Book extends Product {\n    readonly __productSubType: BookSubtypeName;\n    readonly width: number;                         // 成品寬\n    readonly height: number;                        // 成品高\n    readonly numberOfPages: number;                 // 總頁數\n    readonly pagingDirection: BookPagingDirection;  // 翻頁方向\n    readonly coverPaper: Paper;              // 封面紙張種類\n    readonly innerPagesPaper: Paper;         // 內頁紙張種類\n    readonly coverCoating?: Coat;                   // 封面上膜\n    readonly innerPageCoating?: Coat;               // 內頁上膜\n}\n\n/**\n* 膠裝書\n*/\nexport interface PerfectBoundBook extends Book {\n    readonly __productSubType: \"PerfectBoundBook\";\n    readonly hardCovered: boolean;      // 是否精裝（外加硬殼）\n    readonly threadSewn: boolean;       // 是否穿線\n    readonly spineStyle: \"standard\" | \"rounded\";    // 書背：方背／圓背\n}\n\n/**\n* 騎馬釘書\n*/\nexport interface SaddleStichedBook extends Book {\n    readonly __productSubType: \"SaddleStichedBook\";\n}\n\n\n/**\n* 單張\n*/\nexport interface SingleSheet extends Product  {\n    readonly __productSubType: \"SingleSheet\";\n    readonly width: number,\n    readonly height: number,\n    readonly isDoubleSided: boolean,\n    readonly paper: Paper,\n    readonly frontSideCoat?: Coat,\n    readonly backSideCoat?: Coat\n}\n\n/** ============ 產品組成 ============ */\n// 紙張\nexport interface Paper {\n    name: string;\n    material: PaperMaterial;\n    thickness: number; // 厚度（mm）\n    weight: number;    // 單位面積重量（g/m^2）\n    isSmooth: boolean; // 表面是否光滑（會影響能否上膜）\n    description?: string;\n}\n\n// 紙質\nexport interface PaperMaterial {\n    name: string;\n    aliases?: Array<string>;\n}\n\n// 上模\nexport interface Coat {\n    readonly name: string;\n    readonly chineseName: string;\n}\n// 裝訂方式\nexport const BINDING_OPTIONS = [\n    \"SaddleStichBinding\",\n    \"ButterflyBinding\",\n    \"PerfectBinding\"\n] as const;\nexport type BindingOption = typeof BINDING_OPTIONS[number];\n\n/** ============ 產品參數選項 ============ */\n// 書籍可用選項:可用的紙質以及上膜\nexport interface BookProductionOptions {\n    readonly validPaperTexturesForInnerPages: Array<Paper>;\n    readonly validPaperTexturesForCover: Array<Paper>;\n    readonly validCoatingStylesForInnerPages: Array<Coat>;\n    readonly validCoatingStylesorCover: Array<Coat>;\n}\n// 單張可用選項:可用的紙質以及上膜\nexport interface SingleSheetProductionOptions {\n    readonly validPaperTextures: Array<Paper>;\n    readonly validCoatingStyles: Array<Paper>;\n}\n","import { Product } from './product'\n\n/** ============ 審稿 ============ */\n// 審稿資訊物件\nexport interface ReviewItem {\n    status: ReviewStatus;\n    product: Product;\n    models: Array<ReviewModel>;    \n}\n// 審稿狀態\nexport interface ReviewStatus {\n    numberOfModels: number;\n    numberOfFiles: number;\n    uploadFileStatuses: Array<UploadFileStatus>;\n    progress: ReviewingProgress;\n}\n// 登記審稿資訊\nexport interface ReviewRegistrationInfo {\n    numberOfModels: number;\n    product: Product;\n}\n\n/**\n * @enum\n */\n// 審稿狀態\nexport const REVIEWING_PROGRESS = [\n    \"REGISTERED\",                  // '已登記審稿',\n    // \"UPLOADING\",                // '已經開始上傳檔案，但還有檔案沒上傳完畢',\n    // \"GENERATING_PREVIEW_PAGES\", // '所有檔案都上傳完畢，但還有檔案預覽圖在生成中',\n    // \"WAITING_PRINTABLE_REVIEW\", // '預覽圖都生成完畢，但使用者還在確認排版',\n    \"REVIEWED\",\n    // \"GENERATING_PRINTABLE_REVIEWED_PAGES\", // '使用者已確認排版，但還有印刷檔在生成中',\n    // \"WAITING_FOR_USER_CHECK\", // '印刷檔都生成完畢，但使用者還沒確認最終結果',\n    \"FINISHED\", // '使用者審稿完畢'\n] as const;\nexport type ReviewingProgress = typeof REVIEWING_PROGRESS[number];\n\n// 審稿頁與框的配對\nexport interface ReviewModel {\n    readonly modelName: string;\n    framedPages: Array<FramedPage>;\n}\n// 審稿頁與框的資訊\nexport interface FramedPage {\n    frameName: string;\n    sourcePageJpegUrl?: string;\n    sourcePagePdfUrl?: string;\n    resultingJpegUrl?: string;\n    resultingPdfUrl?: string;\n    positionX?: number;\n    positionY?: number;\n    scaleX?: number;\n    scaleY?: number;\n    rotationDegree?: number;\n}\n\n/**\n * @enum\n */\n// 上傳檔案的狀態\nexport const UPLOAD_FILE_PROCESSING_STAGES = [\n    \"UPLOADING\",                     // 已登記上傳檔案，但檔案還沒上傳完\n    \"GENERATING_PRINTABLE_PAGES\",   // 已收到上傳檔，但正在生成每一頁單獨的PDF和JPEG\n    \"FINISHED\"                    // 處理完畢\n] as const;\n\nexport type UploadFileProcessingStage = typeof UPLOAD_FILE_PROCESSING_STAGES[number];\n// 上傳檔案的資訊\nexport interface UploadFileStatus {\n    fileName: string;\n    uploadToken?: string;\n    currentStage: UploadFileProcessingStage;\n    hasError: boolean;\n    numberOfPages?: number;\n    fileAddress?: string;\n    pageInfos?: Array<UploadFilePageInfo>;\n    errorStage?: UploadFileProcessingStage;   \n}\n\nexport interface UploadFilePageInfo {\n    pdfAddress: string;\n    jpegAddress: string;\n    heightInMm: number;\n    widthInMm: number;\n}","\n\n/** ============ 通訊錯誤 ============ */\nexport interface TransactionError extends Error {\n    failureType: FailureType;\n}\n\n/** ============ 錯誤類型 ============ */\nexport enum FailureType {\n    CONNECTION_FAILURE = \"連線錯誤\",\n    PRECONDITION_FAILURE = \"前置條件不符\",\n    POSTCONDITION_FAILURE = \"後置條件無法完成\",\n    UNDEFINED_FAILURE = \"未能歸類為以上三種\"\n}\n\n/** ============ 通訊格式 ============ */\nexport interface TransactionResponse<T> {\n    isFinished: boolean;\n    error?: TransactionError;\n    data: T;\n}\n","module.exports = require(\"axios\");","module.exports = require(\"class-transformer\");","module.exports = require(\"express\");","module.exports = require(\"reflect-metadata\");","module.exports = require(\"tslib\");","module.exports = require(\"typeorm\");"],"sourceRoot":""}